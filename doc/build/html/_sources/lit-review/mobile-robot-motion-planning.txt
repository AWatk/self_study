.. _mobile-robot-motion-planning:

Mobile Robot Motion Planning
============================

.. contents::
   :depth: 2

S. M. Lavalle - Motion Planning: Part 1
---------------------------------------

**DOI** - 10.1109/MRA.2011.940276

Notes
^^^^^^^

**Configuration Space**:

Heavy use of set theory/topology

While c-space is continuous, its computation is discrete and can divided into Combinatorial Planning and Sample-based Planning


Quote: Combinatorial planning solves simpler problems in a clean, elegant way, but the running time is too high for industrial-grade problems. Sampling-based planning provides practical solutions for real-world problems but offers weaker guarantees. Performance degrades for problems in which narrow doorways in Cfree are hard to find. Several extensions to the standard path-planning problem expand the C-space definition and require only minor adaptations to the usual approaches. The key issue is that the C-space dimension increases,which generally raises computational complexity

Takeaways
^^^^^^^^^
Reference this in the future for overview of the field

Sampling-based motion planning libraries:
Open Motion Planning from Rice University
Motion Strategy Library from University of Illinois
Motion Planning Kit from Stanford


S. M. Lavalle - Motion Planning: Part 2
---------------------------------------

**DOI** - 10.1109/MRA.2011.940276

Notes
^^^^^^^

**Limitations of Path Planning**:

Basic path planning can fall short when used in the context of continuously incorporating new data the way autonomous systems do. Behaving in a deterministic way can cause issues when, for example, a step in the path planning process fails due to an earlier decision. Having a fixed "decomposition" of the path and motion planning process can also require unnecessarily large amounts of information when a sparser process could do the trick.

**Differential Constraints**

I'm glad to see this section here, since I started thinking how this could be used when reading Part I. To quote: "Differential constraints naturally arise fromthe kinematics and dynamics of robots. Rather than treating themas an afterthought, this section discusses how to directly model and incorporate them into the planning process. In this way, a path is produced that already satisfies the constraints."

**Feedback Motion Planning**

Independent of differential constraints. Feedback is measuring/sampling the current state instead of relying on state transitions within a model, since all models are imperfect. The next action is then decided based on the current state and optionally by incorporating dynamics. This feedback often takes the form of a potential field or cost function.

A lot of the work here seems very similar to making a cellular automata. In fact, it is trivial to develop a CA that propogates the cost function out from the destination (flooding). The question is, does a more optimal set of laws exist for such a CA? The basic flooding approach is O(n). I know we can reduce this to O(logn) using JFA if minor sacrifices in accuracy are acceptable.

**Sensing Uncertainty**

States are never actually complete. A sensors output, called the observation space, can be a many-to-one mapping, where a weaker sensor produces the same output for many states. Developing a history of these observation spaces as well as actions taken gives a history information space.  In order to develop a motion plan, it is necessary to design a filter for this history I-space to distill only the critical information needed for decision making.

Takeaways
^^^^^^^^^

Review Dynamics book on generalized constraints. Need a better grasp on the math behind this formalism.

Need better knowledge of action spaces.

Right now my view of sensing uncertainty comes exclusively from Probabilistic Robotics. Need to find other sources outside Thrun et al dealing with this area


Johann Borenstein - The Vector Field Histogram -- Fast Obstacle Avoidance for Mobile Robots
-------------------------------------------------------------------------------------------

:Authors:
   Borenstein, Johann
   Koren, Yoram

:DOI:
   10.1109/70.88137

Notes
^^^^^

**Vector Field Histogram Summary**

Vector Field Histogram (VFH) is a real-time obstacle avoidance method.  Provides a method for detection of unknown obstacles, then avoids collision while steering towards the target.

Uses a two-dimensional cartesian *histogram grid* as a world model based on range sensors. A data reduction process is implemented to derive control commands.

Based on instantaneous location a polar histogram is constructed that contains the obstacle density in each direction. An algorithmn then chooses the most suitable direction to go.

**Edge Detection Methods**

Detect vertical edges of obstacle and attempt to steer around it.

Sensitive to sensor quality.

**Certainty Grid**

Probabilistic representation of obstacles in a grid.  Helps to account for inacuracies due to low sensor quality.

World is represented by a 2D array containting a *certainty value* showing confidence an obstacle exitsts.

**Potential Fields**

Imaginary forces acting on a robot.  Obstacles exert a repulsive force while the target exerts an attractive force.

**Virtual Force Field**

Uses a 2D *histogram grid* similar to the certainty grid method, that contains a certainty value.  Differs in the method of updating grid values.  For the histogram grid, only one cell is updated per sensor reading, reducing computational complexity.

e.g. For a sonar sensor, the cell corresponding to the distance reading along the longitudinal axis of the sensor is updated.

This simplifaction is viable when constantly moving and sampling at high rates so that negihboring cells are also constantly updated.

After the grid is constructed, the potential field concepts are applied. A *active region* is constructed around the robot. A repulsive force from each cell in the active region is calculated based on the obstacle certainty value of the cell and the distance to the robot. An attractive force is caculated based on direction and distance to the target. The summation is then a force vector from which control commands can be extracted.

Issues with close obstacles such as doorways. Symmetry of the obstacles can create a repulsive force away from the target.

Issues with descretization of grid. Changing robot location from one grid cell to a neighbor can cause a sudden change in the force vector.

Issues with oscillatory motion in hallways.

Primary cause: Too much data reduction. The historgram grid information is distilled into two data points: the magnitude and direction of the resultant force.

**Vector Field Histogram Revisited**

Avoids over-reduction of data using its two-stage method. Three levels of data exist

#. Histogram grid
#. 1D polar histogram of n angular sectors. Contains the polar obstacle density
#. Output of VFH algorithm with reference values for the drive and steer controllers


Takeaways
^^^^^^^^^

VFH takes into account a *target vector*, the vector from the currect robot's location to the target location. This seems it can easily be replaced by a vector command from a joystick.


Lydia E. Kavraki - Probabilistic Roadmaps for Path Planning in High-Dimensional Configuration Spaces
----------------------------------------------------------------------------------------------------

:Authors:
   Kavraki, L.E.
   Svestka, P.
   Latombe, J.-C.
   Overmars, M.H.

:DOI:
   10.1109/70.508439


Notes
^^^^^

An offline  motion planning method for static workspaces. Two phases: a learning phase and a query phase

Learning Phase
 A probabilistic roadmap is constructed. Basically an undirected graph where each node is a collision-free configuration and each edge is a feasible path between configurations.

Query Phase
 Start and goal configurations are set, then the roadmap is search for a path to connect the two nodes.

Designed for high DOF, holonomic systems, but provides a reference for its application in nonholonomic "car-like" systems.



Takeaways
^^^^^^^^^

Applicable towards offline path planning of a known, static workspace, so for the time being it does not seem very applicable


Elon Rimon - Exact Robot Navigation Using Artificial Potential Functions
------------------------------------------------------------------------

:Authors:
   Rimon, Elon
   Koditschek, Daniel

:DOI:
   10.1109/70.163777

Notes
^^^^^

A general solution for combining kinematic motion planning with lower level feedback controller design.

Information is encoded in an artificial potential function called a *navigation function* that claims to "connects the kinematic planning problem with the dynamic execution problem in a provably correct fashion"

A torque feedback controller can then be created to provide collision-free motion and convergence to target location

Solution is presented for a *generalized sphere world* as well as coordinate transforms to build a sphere world that is topologically similar to the actual configuration space.

Alternative methodologies sometimes split robot navigation into three distinct fields

#. Path Planning
    Given geometric data and desired destination, generate a collision-free curve connecting the robot's initial and final configurations
#. Trajectory Planning
    Given a collision-free curve, find a time parameterization for the curve under certain constraints
#. Control Problem
    develop a controller to follow the generated trajectory

Artificial potential field claims to combine all into a single process.


Takeaways
^^^^^^^^^

Fairly dense, definitely need to come back to this once I have more knowledge since it is cited by 913 papers...


M.W.M. Gamini Dissanayake - A Solution to the Simultaneous Localization and Map Building (SLAM) Problem
-------------------------------------------------------------------------------------------------------

:Authors:
   Gamini Dissanayake, M. W.M.
   Newman, Paul
   Clark, Steven
   Durrant-Whyte, Hugh F.
   Csorba, M.

:DOI:
   10.1109/70.938381

Notes
^^^^^

SLAM problem
 Can an autonomous vehicle start in an unknown location in an unknown environment and concurrently build a map of the environment while using the map to determine absolute vehicle location.

Starts from estimation-theoretic principles and proves that a solution does exist with the following results

#. The determinant of any submatrix of the map covariance matrix decreases monotonically as observations are successively made.
#. In the limit as the number of observations increases, the landmark estimates become fully correlated.
#. In the limit, the covariance associated with any single landmark location estimate is determined only by the initial covariance in the vehicle location estimate

From these results, the following observation are noted:

#. The entire structure of the SLAM problem critically depends on maintaining complete knowledge of the cross correlation between landmark estimates. Minimizing or ignoring cross correlations is precisely contrary to the structure of the problem.
#. As the vehicle progresses through the environment the errors in the estimates of any pair of landmarks become more and more correlated, and indeed never become less correlated.
#. In the limit, the errors in the estimates of any pair of landmarks becomes fully correlated. This means that given the exact location of any one landmark, the location of any other landmark in the map can also be determined with absolute certainty.
#. As the vehicle moves through the environment taking observations of individual landmarks, the error in the estimates of the relative location between different landmarks reduces monotonically to the point where the map of relative locations is known with absolute precision.
#. As the map converges in the above manner, the error in the absolute location of every landmark (and thus the whole map) reaches a lower bound determined only by the error that existed when the first observation was made.

A later section the provides a case study using a millimeter wave (MMW) radar sensor in an outdoor environment.

Takeaways
^^^^^^^^^


C. Cadena - Past, Present, and Future of Simultaneous Localization and Mapping: Towards the Robust-Perception Age
-----------------------------------------------------------------------------------------------------------------

:Authors:
   Cadena, Cesar
   Carlone, Luca
   Carrillo, Henry
   Latif, Yasirn
   Scaramuzza, Davide
   Neira, Jose
   Reid, Ian
   Leonard, John J.

:DOI:
   10.1109/TRO.2016.2624754

Notes
^^^^^

What looks to be an amazing overview of SLAM and its development. Introduction provides a "survey of surveys" covering different ers and aspects of SLAM

SLAM "Ages"

#. Classical Age (1986-2004)
    Introduction of the main probabilistic formulations of SLAM such as EKF, Rao-Blackwellised Particle Filters, and maximum likelihood estimation.  Mentions *Probabilistic Robotics* by Thrun, Burgard, and Fox as a great reference for this time period.
#. Algorithmic-Analysis (2005-2015)
    Study of fundamental properties of SLAM such as observability, convergence, and consistency. Further understanding of sparsity towards efficient SLAM solvers, and open source SLAM libraries are developed


Levels of SLAM:

#. Lower End / Front End
    Use of fields such as computer vision and signal processing
#. High End / Back End
    Use of geometry, graph theory, optimization, and probabilistic estimation

Two big questions are then discussed:

#. Do autonomous robots need SLAM?
#. Is SLAM solved as an academic research endeavor?

**Do autonoumous robots need SLAM?**

Originally pure odometry was not accurate due to drift errors in integrating wheel motion. SLAM's use of *loop closure* helps alleviate this problem. However, with the advent of *Visual-Inertial Navigation (VIN)* is SLAM needed?

The first argument is then made that VIN arises from SLAM and is simply a reduced SLAM system in which loop closure (i.e. place recognition) is removed.

Second looks at the topological map that is created. Without SLAM's loop closure, a robot never registers an intersection and instead is always exploring a new map e.g. an "infinite corridor"

The third answer is that SLAM is needed for applications that require a global consistent map.

**Is SLAM Solved?**

Naturally depends on specifics of robot, environment, and performance.

e.g. Mapping an indoor 2D environment with a robot equipped with wheel encoders and a laser scanner can be considered largely solved. See the *Kuka Navigation Solution*

e.g. Vision-based SLAM with slow motion such as mars rovers is a very mature field

Areas still in need of work are configurations with fast robot dynamics or rapidly changing environments, and situations requiring high rate estimation for fast closed-loop control

This leads to the third proposed era of SLAM, the *Robust-Perception Age*, which is characterized by the following:
#. Robust Performance
    low failure rate, fail-safes, self-tuning
#. High level understanding
    going beyond basic geometric reconstruction. obtain a high level understanding of the environment such as high-levle geometry, semantics, physics, and affordances
#. Resource Awareness
    systems tailored to the available sensing and computational resources and provides means to adjust the computation load
#. Task-driven perception
    Ability to filter out irrelevant sensor data based on the task being performed. Production of adaptive-map representations whose complexity varies with task at hand



Takeaways
^^^^^^^^^

"Tutorials" to read:
 H. F. Durrant-Whyte and T. Bailey. Simultaneous Localisation and Mapping (SLAM): Part I.
 T. Bailey and H. F. Durrant-Whyte. Simultaneous Localisation and Mapping (SLAM): Part II.
   
